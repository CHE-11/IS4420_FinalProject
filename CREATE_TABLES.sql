USE master; 
GO

DROP DATABASE IF EXISTS FinalProject_Group8;
CREATE DATABASE FinalProject_Group8;
GO

USE FinalProject_Group8;

DROP TABLE IF EXISTS EMPLOYEES
CREATE TABLE EMPLOYEES (
    EmployeeID SMALLINT NOT NULL IDENTITY(1,1),
    SSN INT NOT NULL,
    FirstName VARCHAR(30) NOT NULL,
    MiddleName VARCHAR(30) DEFAULT NULL,
    LastName VARCHAR(30) NOT NULL,
    StreetAddress VARCHAR(50) NOT NULL,
    City VARCHAR(40) NOT NULL,
    StateCode CHAR(2) NOT NULL,
    ZipCode INT NOT NULL,
    Title VARCHAR(30) NOT NULL,
    StartDate DATE NOT NULL,
    EndDate DATE,
    CONSTRAINT PK_Employees_EmployeeID PRIMARY KEY (EmployeeID)
);

--Only on my version of SQL file
DROP TABLE IF EXISTS EMPLOYEE_EMAIL
CREATE TABLE EMPLOYEE_EMAIL
    (
    EmployeeID SMALLINT NOT NULL,
    EmailAddress VARCHAR(254) NOT NULL,
    PrimaryEmailFlag CHAR(1) NOT NULL DEFAULT 'Y'
    CONSTRAINT PK_EMPLOYEE_EMAIL_EmployeeID PRIMARY KEY (EmployeeID),
    CONSTRAINT FK_EMPLOYEE_EMAIL_EmployeeID FOREIGN KEY (EmployeeID) REFERENCES Employees (EmployeeID),
    CONSTRAINT CHECK_EMPLOYEE_EMAIL_PrimaryEmailFlag CHECK (PrimaryEmailFlag IN ('Y', 'N'))
);

DROP TABLE IF EXISTS WAREHOUSE_EMP
CREATE TABLE WAREHOUSE_EMP (
    EmployeeID SMALLINT NOT NULL,
    HourlyPay DECIMAL(5,2) NOT NULL,
    ForkliftCert CHAR(1) NOT NULL,
    CONSTRAINT PK_WAREHOUSE_EmployeeID PRIMARY KEY (EmployeeID)
);


DROP TABLE IF EXISTS TRUCKER
CREATE TABLE TRUCKER (
    EmployeeID SMALLINT NOT NULL,
    HourlyPay DECIMAL(5,2) NOT NULL,
    MilesDriven INT NOT NULL,
    PayPerMile DECIMAL(3,2) NOT NULL,
    CDL CHAR(1) NOT NULL,
    CONSTRAINT PK_TRUCKER_EmployeeID PRIMARY KEY (EmployeeID)

);

DROP TABLE IF EXISTS SERVICE_MEMBER
CREATE TABLE SERVICE_MEMBER (
    EmployeeID SMALLINT NOT NULL,
    HourlyPay DECIMAL(5,2) NOT NULL,
    HomeCert CHAR(1) NOT NULL,
    CONSTRAINT PK_SERVICE_MEMBER_EmployeeID PRIMARY KEY (EmployeeID)
);

DROP TABLE IF EXISTS ADMINISTRATION
CREATE TABLE ADMINISTRATION (
    EmployeeID SMALLINT NOT NULL,
    Salary DECIMAL(9,2) NOT NULL,
    CONSTRAINT PK_ADMINISTRATION_EmployeeID PRIMARY KEY (EmployeeID)
);

DROP TABLE IF EXISTS SALES_REP
CREATE TABLE SALES_REP (
    EmployeeID SMALLINT NOT NULL,
    BaseSalary DECIMAL(8,2) NOT NULL,
    Commissions DECIMAL(7,2) NOT NULL,
    CONSTRAINT PK_SALES_REP_EmployeeID PRIMARY KEY (EmployeeID)
);


DROP TABLE IF EXISTS CUSTOMER
CREATE TABLE CUSTOMER (
    CustomerID SMALLINT NOT NULL IDENTITY(1,1),
    FirstName VARCHAR(25) NOT NULL,
    LastName VARCHAR(25) NOT NULL,
    BillingStreetAddress VARCHAR(50),
    BillingZipCode INT NOT NULL,
    BillingStateCode CHAR(2) NOT NULL,
    InsuranceCompany VARCHAR(40) DEFAULT NULL,
    InsuranceID INT DEFAULT NULL,
    CONSTRAINT PK_CUSTOMER_CustomerID PRIMARY KEY (CustomerID)
);


DROP TABLE IF EXISTS BUSINESS
CREATE TABLE BUSINESS (
    CustomerID SMALLINT NOT NULL,
    BusinessName VARCHAR(30) NOT NULL,
    BusinessType VARCHAR(30) NOT NULL,
    CONSTRAINT PK_BUSINESS_CustomerID PRIMARY KEY (CustomerID)
);

DROP TABLE IF EXISTS CUSTOMER_EMAIL
CREATE TABLE CUSTOMER_EMAIL (
    CustomerID SMALLINT NOT NULL,
    EmailAddress VARCHAR(254) NOT NULL,
    PrimaryEmailFlag CHAR(1) NOT NULL DEFAULT 'Y',
    CONSTRAINT PK_CustomerID_EmailAddress PRIMARY KEY (CustomerID, EmailAddress),
    CONSTRAINT FK_CustomerID_EmailAddress FOREIGN KEY (CustomerID) REFERENCES CUSTOMER (CustomerID),
	CONSTRAINT CHECK_CUSTOMER_EMAIL_PrimaryEmailFlag CHECK (PrimaryEmailFlag IN ('Y', 'N'))
);

DROP TABLE IF EXISTS PHONE_NUMBER
CREATE TABLE PHONE_NUMBER (
    CustomerID SMALLINT NOT NULL,
    PhoneNumber VARCHAR(254) NOT NULL,
    PrimaryNumberFlag CHAR(1) NOT NULL,
    CONSTRAINT PK_CustomerID_PhoneNumber PRIMARY KEY (CustomerID, PhoneNumber),
    CONSTRAINT FK_CustomerID_PhoneNumber FOREIGN KEY (CustomerID) REFERENCES CUSTOMER (CustomerID)
);


DROP TABLE IF EXISTS PRODUCT
CREATE TABLE PRODUCT (
    ProductID SMALLINT NOT NULL IDENTITY(1,1),
    ProductName VARCHAR(30) NOT NULL,
    ProductDescription VARCHAR(250) NOT NULL,
    SalesPrice DECIMAL(9,2) NOT NULL,
    ProductionTime SMALLINT NOT NULL,
    CONSTRAINT PK_Product_ProductID PRIMARY KEY (ProductID)
);

DROP TABLE IF EXISTS PRODUCT_PRICE_HISTORY
CREATE TABLE PRODUCT_PRICE_HISTORY (
    ProductID SMALLINT NOT NULL,
    PriceChangeDate DATETIME NOT NULL,
    SalesPrice DECIMAL(9,2) NOT NULL,
    CONSTRAINT PK_ProductPriceHistory_ProductID_PriceChangeDate PRIMARY KEY (ProductID, PriceChangeDate),
    CONSTRAINT FK_ProductPriceHistory_ProductID FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID)
);
--Changed from CustomerOrder--
DROP TABLE IF EXISTS ORDER_HEADER
CREATE TABLE ORDER_HEADER (
    OrderID INT NOT NULL IDENTITY(1,1),
    CustomerID SMALLINT NOT NULL,
    EmployeeID SMALLINT NOT NULL,
    OrderDate DATE NOT NULL,
    OrderTime TIME NOT NULL,
    DeliveryAddress VARCHAR(50),
    DeliveryZipCode INT NOT NULL,
    DeliveryState CHAR(2) NOT NULL,
    CONSTRAINT PK_Orders_OrderID PRIMARY KEY (OrderID),
    CONSTRAINT FK_Orders_CustomerID FOREIGN KEY (CustomerID) REFERENCES CUSTOMER (CustomerID),
    CONSTRAINT FK_Orders_EmployeeID FOREIGN KEY (EmployeeID) REFERENCES EMPLOYEES (EmployeeID)
);
--Changed from OrderProduct--
DROP TABLE IF EXISTS ORDER_LINE
CREATE TABLE ORDER_LINE (
    OrderProduct INT IDENTITY(1, 1) NOT NULL,
    OrderID INT NOT NULL,
    ProductID SMALLINT NOT NULL,
    Price DECIMAL (9,2) NOT NULL,
    Quantity INT NOT NULL,
    CONSTRAINT PK_ORDER_LINE_OrderProduct PRIMARY KEY (OrderProduct),
    CONSTRAINT FK_ORDER_LINE_OrderID FOREIGN KEY (OrderID) REFERENCES ORDER_HEADER (OrderID),
    CONSTRAINT FK_ORDER_LINE_ProductID FOREIGN KEY (ProductID) REFERENCES PRODUCT (ProductID)
);

DROP TABLE IF EXISTS SHIPMENT_LOCATION
CREATE TABLE SHIPMENT_LOCATION (
    ShipmentLocationID TINYINT NOT NULL,
    LocationName VARCHAR(50) NOT NULL,
    StreetAddress VARCHAR(50) NOT NULL,
    StateCode CHAR(2) NOT NULL,
    ZipCode INT NOT NULL,
    CONSTRAINT PK_ShipmentLocation_ShipmentLocationID PRIMARY KEY (ShipmentLocationID)
);

DROP TABLE IF EXISTS CORPORATE_TRUCKING
CREATE TABLE CORPORATE_TRUCKING (
    ShipmentLocationID TINYINT NOT NULL,
    CorporateTruckID TINYINT NOT NULL,
    CONSTRAINT PK_CorporateTrucking_ShipmentLocationID PRIMARY KEY (ShipmentLocationID)
);

DROP TABLE IF EXISTS WAREHOUSE
CREATE TABLE WAREHOUSE (
    ShipmentLocationID TINYINT NOT NULL,
    BinNumber SMALLINT NOT NULL,
    AisleNumber SMALLINT NOT NULL,
    COnstraint PK_WAREHOUSE_ShipmentLocationID PRIMARY KEY (ShipmentLocationID)
);

DROP TABLE IF EXISTS INTERNAL_TRUCK
CREATE TABLE INTERNAL_TRUCK (
    ShipmentLocationID TINYINT NOT NULL,
    InternalTruckID TINYINT NOT NULL,
    CONSTRAINT PK_INTERNAL_TRUCK_ShipmentLocationID PRIMARY KEY (ShipmentLocationID)
);

DROP TABLE IF EXISTS INTRASTATE_LINE
CREATE TABLE INTRASTATE_LINE (
    ShipmentLocationID TINYINT NOT NULL IDENTITY(1,1),
    LineID SMALLINT NOT NULL,
    LineName VARCHAR(30) NOT NULL,
    CONSTRAINT PK_INTRASTATE_LINE_ShipmentLocationID_LineID PRIMARY KEY (ShipmentLocationID, LineID),
    CONSTRAINT FK_INTRASTATE_LINE_ShipmentLocationID FOREIGN KEY (ShipmentLocationID) REFERENCES SHIPMENT_LOCATION (ShipmentLocationID)
);

DROP TABLE IF EXISTS PRODUCT_LOCATION
CREATE TABLE PRODUCT_LOCATION (
    OrderProduct INT NOT NULL IDENTITY(1,1),
    ShipmentLocationID TINYINT NOT NULL,
    CONSTRAINT PK_ProductLocation_ORDER_LINE_ShipmentLocationID PRIMARY KEY (OrderProduct, ShipmentLocationID),
    CONSTRAINT FK_ProductLocation_ORDER_LINE FOREIGN KEY (OrderProduct) REFERENCES ORDER_LINE (OrderProduct),
    CONSTRAINT FK_ProductLocation_ShipmentLocationID FOREIGN KEY (ShipmentLocationID) REFERENCES SHIPMENT_LOCATION (ShipmentLocationID)
);
      
